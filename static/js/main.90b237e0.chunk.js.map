{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedButton","handleButtonPress","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,eAAe,GAFnB,EAaEC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CAAEH,cAAeE,EAAME,OAdzC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,qBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,qBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIF,KAAKR,MAAMC,cAAX,mCAC8BO,KAAKR,MAAMC,cADzC,KAEE,kCAvBd,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.90b237e0.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedButton: string | boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedButton: false,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleButtonPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleButtonPress);\n  }\n\n  handleButtonPress = (event: KeyboardEvent) => {\n    this.setState({ pressedButton: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { this.state.pressedButton\n            ? `The last pressed key is [${this.state.pressedButton}]`\n            : 'Nothing was pressed yet' }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}